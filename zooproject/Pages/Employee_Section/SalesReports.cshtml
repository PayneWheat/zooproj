@page
@model SalesReportsModel
@{
}
<script src="~/js/moment.js"></script>
<script src="~/js/Chart.js"></script>


<style>
    #sales, #report {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #sales td, #sales th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #sales tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #sales tr:hover {
            background-color: #ddd;
        }

        #sales th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    #sales {
        float: left;
    }

    #StoreInfo {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #StoreInfos, #StoreInfo th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #StoreInfo tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #StoreInfo tr:hover, #StoreInfo {
            background-color: #ddd;
        }

            #StoreInfo th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #4CAF50;
                color: white;
            }

    #StoreInfo {
        float: left;
    }
</style>
<nav class="employee-links">
    <a asp-page="./Insert">Insert</a>
    <a asp-page="./SalesReports">Sales Reports</a>
    <a asp-page="./Search">Search</a>
    <a asp-page="./Update">Update</a>
    <a asp-page="../Logout">Logout</a>
</nav>
<a href="./">Back to Employee Section</a>
<h1>Sales's Report Page</h1>
<div>
    <form method="get">
        <div id="dateGenerator">
            <h2>By Date</h2>
            <div id="rangeDiv">
                <label for="startDate" id="sDLbl">Starting Date</label>
                <input type="text" id="startDate" name="startDate" class="dateSelection" value="@Model.sD" />
                <label for="endDate" id="endDateLabel">Ending Date</label>
                <input type="text" id="endDate" name="endDate" class="dateSelection" value="@Model.eD" style="" />
                <div>Only select starting date for single day results.</div>
            </div>
        </div>
        <div id="timeGenerator">
            <h2>By Time</h2>
            <label for="startTime">Time</label>
            <input type="text" name="startTime" class="timeSelection" value="@Model.sT"/>
            <label for="endTime">Ending Time</label>
            <input type="text" name="endTime" class="timeSelection" value="@Model.eT"/>
        </div>
        <div id="storeGenerator">
            <h2>By Store</h2>
            <label for="storeSelect">Select Store</label>
            <select name="storeSelect" id="storeSelection">
                <option value="none"></option>
                @for (int i = 0; i < Model.SInt; i++)
                {
                    @if (Model.StoreResults[i][0] == Model.sS.ToString())
                    {
                        <option value="@Model.StoreResults[i][0]" selected>@Model.StoreResults[i][1]</option>
                    }
                    else
                    {
                        <option value="@Model.StoreResults[i][0]">@Model.StoreResults[i][1]</option>

                    }
                }
            </select>
        </div>
        <div id="employeeGenerator">
            <h2>By Employee</h2>
            <!--
        <div>

            <label for="employeeFName">Employee First Name</label>
            <input type="text" name="employeeFName" id="eFirstName" />
            <label for="employeeLName">Employee Last Name</label>
            <input type="text" name="employeeLName" id="eLastName" />

        </div>
            -->
            <div>
                <label for="employeeID">Employee ID</label>
                <input type="text" name="employeeID" id="eID" />
                <!--
                <label for="employeeTitle">Title</label>

                <select name="employeeTitle">
                    <option value="none"></option>
                @for (int i = 0; i < Model.TInt; i++)
                {
                    <option value="@Model.TitleResults[i][0]">@Model.TitleResults[i][1]</option>
                }

                </select>
                    -->
            </div>
        </div>
        <!--
        <div id="customerGenerator">
            <h2>By Customer</h2>
            <div>
                <label for="customerID">Customer ID</label>
                <input type="text" name="customerID" id="cID" />
            </div>
            <div>
                <label for="customerFName">First Name</label>
                <input type="text" name="customerFName" id="cFirstName" />

                <label for="customerLName">Last Name</label>
                <input type="text" name="customerLName" id="cLastName" />
            </div>
            <div>
                <label for="customerAddress">Address</label>
                <input type="text" name="customerAddress" id="cID" />
                <label for="customerZip">Zip Code</label>
                <input type="text" name="customerZip" id="cID" />
            </div>
            <div>
                <label for="customerPhone">Phone Number</label>
                <input type="text" name="customerPhone" id="cID" />
                <label for="customerEmail">Email</label>
                <input type="text" name="customerEmail" id="cID" />
            </div>
        </div>
            -->
        <div id="productGenerator">
            <h2>By Product</h2>
            <label for="productID">Product ID</label>
            <input type="text" name="productID" />
            <!--
            <label for="productName">Name</label>
            <input type="text" name="productName" />
                -->
        </div>
        <input type="submit" value="Generate Report" />
    </form>
</div>
<div id="resultsContainer">
    @if (Model.BInt >= 4)
    {
        <canvas id="myChart" width="400" height="150"></canvas>
    }
    @if (Model.BInt == 0)
    {
        <span class="noResults">No results were found</span>
    }
    else if (Model.BInt > 0)
    {
        // Do an hourly result for the graph if less than 4?
        <table id="report">
            <tr>
                @for (int i = 0; i < Model.AInt; i++)
        {
            <th>@Model.ViewColumns[i]</th>
}
            </tr>

            @for (int i = 0; i < Model.BInt; i++)
    {
        <tr>
            @for (int j = 0; j < Model.AInt; j++)
    {
        <td>@Model.ViewResults[i][j]</td>
}

        </tr>
}
            <tr><td id="avgLabel" style="text-align:right; padding: 0 15px">Average Per Day:</td><td id="avgCell"></td></tr>
            <tr><td id="totalPurchases" style="text-align:right; padding: 0 15px">Total Purchases:</td><td>@Model.purchaseCount</td></tr>
            <tr><td id="ticketsSold" style="text-align:right; padding: 0 15px">Tickets sold:</td><td>@Model.ticketsSold</td></tr>
        </table>

    }


</div>
<!--
<table id="sales" style="width:50%; border:1px solid black; padding:15px">

    <tr>
        <th>Date</th>
        <th>Total Revenue</th>
        <th># of Purchases</th>
        <th>Aggregate Store Info</th>
    </tr>

    @for (int i = 0; i < Model.PurchaseDateList.Count; i++)
    {
        <form method="post">
            <tr>
                <td>@Model.PurchaseDateList[i].Month/@Model.PurchaseDateList[i].Day/@Model.PurchaseDateList[i].Year</td>
                <td>$@decimal.Round(Model.PurchaseAmountList[i], 2, MidpointRounding.AwayFromZero)</td>
                <td>@Model.PurchaseQuantityList[i]</td>
                <td>
                    <select name="storeChoice">
                        <option value="Ticket Booths, @Model.PurchaseDateList[i]">Ticket Booths</option>
                        <option value="Restaurants, @Model.PurchaseDateList[i]">Restaurants</option>
                        <option value="Gift Shops, @Model.PurchaseDateList[i]">Gift Shops</option>
                    </select>
                    <input type="submit" value="Select" />

                </td>
            </tr>
        </form>
    }
</table>




@if(Model.secondTableChoice != ""){
    <table id="StoreInfo" style="width:50%; border:1px solid black; padding:15px">

        <tr>
            <th>@Model.secondTableStoreChoice</th>
            <th>#Purchases</th>
            <th>Total Revenue</th>
            <th>#Items</th>
            <th>$Average Purchase</th>
        </tr>
        <tr>
            <td>@Model.secondTableDateChoice</td>
            <td>@Model.StorePurchaseNum</td>
            <td>$@decimal.Round(Model.StoreRevenue, 2, MidpointRounding.AwayFromZero)</td>
            <td>@Model.StoreItems</td>
            <td>$@decimal.Round(Model.StoreAverage, 2, MidpointRounding.AwayFromZero)</td>
        </tr>
    </table>
}
-->
<p>@Model.secondTableChoice</p>
<p>@Model.secondTableStoreChoice</p>
<p>@Model.secondTableDateChoice</p>
<p>@Model.AMessage</p>
<script>
    $(document).ready(function () {
        $("form").submit(function () {
            $("input").each(function (index, obj) {
                if ($(obj).val() == "") {
                    $(obj).remove();
                }
            });
            $("select").each(function (index, obj) {
                if ($(obj).val() == "none") {
                    $(obj).remove();
                }
            });
        });
    });
    $(".dateSelection").each(function () {
        $(this).datepicker({
            dateFormat: "yy/mm/dd"
        });
    });


    var reportTable = document.getElementById("report");
    var tableData = [];
    var tableDates = [];
    var avg = 0;
    var bInt = @Model.BInt;
    console.log(bInt);
    if (bInt >= 4) {
        for (i = 1; i <= bInt; i++) {
            var date = reportTable.children[0].children[i].children[0].innerHTML;
            console.log("date: " + date);
            var value = parseInt(reportTable.children[0].children[i].children[1].innerHTML);

            avg += value;
            console.log(avg);
            tableData.push(value);
            date = new Date(date.replace(/-/g, "/"));
            tableDates.push(date.toISOString());
        }
        avg = avg / bInt;
        console.log("avg: " + avg)
        document.getElementById("avgCell").innerHTML = avg.toFixed(2);

        console.log(tableDates);
        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: tableDates,
                datasets: [{
                    label: 'Sales',
                    data: tableData,
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        time: {
                            //unit: 'day',
                            displayFormats: {
                                month: 'MMM YYYY',
                                hour: 'MMM D'
                            }

                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Date"
                        }

                    }],
                    yAxes: [{
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + value;
                            }
                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Sales"
                        }
                    }]
                }
            }
        });
    }

</script>