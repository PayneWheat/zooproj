@page
@model SalesReportsModel
@{
}
<script src="~/js/moment.js"></script>
<script src="~/js/Chart.js"></script>


<style>
    #sales, #report {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #sales td, #sales th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #sales tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #sales tr:hover {
            background-color: #ddd;
        }

        #sales th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    #sales {
        float: left;
    }

    #StoreInfo {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #StoreInfos, #StoreInfo th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #StoreInfo tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #StoreInfo tr:hover, #StoreInfo {
            background-color: #ddd;
        }

            #StoreInfo th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #4CAF50;
                color: white;
            }

    #StoreInfo {
        float: left;
    }
</style>
<nav class="employee-links">
    <a asp-page="./Insert">Insert</a>
    <a asp-page="./SalesReports">Sales Reports</a>
    <a asp-page="./Search">Search</a>
    <a asp-page="./Update">Update</a>
    <a asp-page="../Login">Logout</a>
</nav>
<h1>Sales's Report Page</h1>
<div>
    <form method="post">
        <div id="dateGenerator">
            <label for="startDate">Date</label>
            <input type="text" name="startDate" class="dateSelection" /><span><a href="#" id="startingDate" style="display:inline-block;">Choose range of dates.</a></span>
            <label for="endDate" style="display:none;">Ending Date</label>
            <input type="text" name="endDate" class="dateSelection" style="display:none;" /><a href="#" id="endingDate" style="display:none;">Choose a single date.</a></span>
        </div>
        <div id="timeGenerator">
            <label for="startTime">Time</label>
            <input type="text" name="startTime" class="timeSelection" />
            <label for="endDate">Ending Time</label>
            <input type="text" name="endTime" class="timeSelection" />
        </div>
        <div id="storeGenerator">
            <label for="storeSelect">Select Store</label>
            <select name="storeSelect" id="storeSelection">
                @for (int i = 0; i < Model.SInt; i++)
                {
                    <option value="@Model.StoreResults[i][0]">@Model.StoreResults[i][1]</option>
                }
            </select>
        </div>
        <div id="employeeGenerator">
            <div>
                <label for="employeeFName">Employee First Name</label>
                <input type="text" name="employeeFName" id="eFirstName" />
                <label for="employeeLName">Employee Last Name</label>
                <input type="text" name="employeeLName" id="eLastName" />
            </div>
            <div>
                <label for="employeeID">Employee ID</label>
                <input type="text" name="employeeID" id="eID" />
                <label for="employeeTitle">Title</label>

                <select name="employeeTitle">
                    @for (int i = 0; i < Model.TInt; i++)
                    {
                        <option value="@Model.TitleResults[i][0]">@Model.TitleResults[i][1]</option>
                    }
                </select>
            </div>
        </div>
        <div id="customerGenerator">
            <div>
                <label for="customerID">Customer ID</label>
                <input type="text" name="customerID" id="cID" />
            </div>
            <div>
                <label for="customerFName">First Name</label>
                <input type="text" name="customerFName" id="cFirstName" />

                <label for="customerLName">Last Name</label>
                <input type="text" name="customerLName" id="cLastName" />
            </div>
            <div>
                <label for="customerAddress">Address</label>
                <input type="text" name="customerAddress" id="cID" />
                <label for="customerZip">Zip Code</label>
                <input type="text" name="customerZip" id="cID" />
            </div>
            <div>
                <label for="customerPhone">Phone Number</label>
                <input type="text" name="customerPhone" id="cID" />
                <label for="customerEmail">Email</label>
                <input type="text" name="customerEmail" id="cID" />
            </div>
        </div>

        <input type="submit" value="Generate Report" />
    </form>
</div>
<canvas id="myChart" width="400" height="150"></canvas>
<table id="report">
    <tr>
        @for (int i = 0; i < Model.AInt; i++)
        {
            <th>@Model.ViewColumns[i]</th>
        }
    </tr>

    @for (int i = 0; i < Model.BInt; i++)
    {
        <tr>
            @for (int j = 0; j < Model.AInt; j++)
            {
                <td>@Model.ViewResults[i][j]</td>
            }

        </tr>
    }
</table>

<!--
<table id="sales" style="width:50%; border:1px solid black; padding:15px">

    <tr>
        <th>Date</th>
        <th>Total Revenue</th>
        <th># of Purchases</th>
        <th>Aggregate Store Info</th>
    </tr>

    @for (int i = 0; i < Model.PurchaseDateList.Count; i++)
    {
        <form method="post">
            <tr>
                <td>@Model.PurchaseDateList[i].Month/@Model.PurchaseDateList[i].Day/@Model.PurchaseDateList[i].Year</td>
                <td>$@decimal.Round(Model.PurchaseAmountList[i], 2, MidpointRounding.AwayFromZero)</td>
                <td>@Model.PurchaseQuantityList[i]</td>
                <td>
                    <select name="storeChoice">
                        <option value="Ticket Booths, @Model.PurchaseDateList[i]">Ticket Booths</option>
                        <option value="Restaurants, @Model.PurchaseDateList[i]">Restaurants</option>
                        <option value="Gift Shops, @Model.PurchaseDateList[i]">Gift Shops</option>
                    </select>
                    <input type="submit" value="Select" />

                </td>
            </tr>
        </form>
    }
</table>




@if(Model.secondTableChoice != ""){
    <table id="StoreInfo" style="width:50%; border:1px solid black; padding:15px">

        <tr>
            <th>@Model.secondTableStoreChoice</th>
            <th>#Purchases</th>
            <th>Total Revenue</th>
            <th>#Items</th>
            <th>$Average Purchase</th>
        </tr>
        <tr>
            <td>@Model.secondTableDateChoice</td>
            <td>@Model.StorePurchaseNum</td>
            <td>$@decimal.Round(Model.StoreRevenue, 2, MidpointRounding.AwayFromZero)</td>
            <td>@Model.StoreItems</td>
            <td>$@decimal.Round(Model.StoreAverage, 2, MidpointRounding.AwayFromZero)</td>
        </tr>
    </table>
}
-->
<p>@Model.secondTableChoice</p>
<p>@Model.secondTableStoreChoice</p>
<p>@Model.secondTableDateChoice</p>
<p>@Model.AMessage</p>
<script>
    var reportTable = document.getElementById("report");
    var tableData = [];
    var tableDates = [];
    console.log(reportTable.children[0].children);
    for (i = 1; i < reportTable.children[0].children.length; i++) {
        var date = reportTable.children[0].children[i].children[0].innerHTML;
        var value = reportTable.children[0].children[i].children[1].innerHTML;
        console.log(date + " " + value);
        tableData.push(value);
        date = new Date(date.replace(/-/g, "/"));
        //date = date.getYear() + "-" + date.getMonth() + "-" + date.getDay();
        tableDates.push(date.toISOString());
    }
    console.log(tableDates);
    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            //labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            labels: tableDates,
            datasets: [{
                label: '# of Votes',
                //data: [12, 19, 3, 5, 2, 3],
                data: tableData,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    type: 'time',
                    time: {
                        displayFormats: {
                            month: 'MMM YYYY'

                        }

                    }

                }]
            }
        }
    });
</script>