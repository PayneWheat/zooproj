@page
@model SalesReportsModel
@{
}
<script src="~/js/moment.js"></script>
<script src="~/js/Chart.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>

<link rel="stylesheet" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" />
<style>
    #sales, #report {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #sales td, #sales th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #sales tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #sales tr:hover {
            background-color: #ddd;
        }

        #sales th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    #sales {
        float: left;
    }

    #StoreInfo {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #StoreInfos, #StoreInfo th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #StoreInfo tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #StoreInfo tr:hover, #StoreInfo {
            background-color: #ddd;
        }

            #StoreInfo th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #4CAF50;
                color: white;
            }

    #StoreInfo {
        float: left;
    }
</style>
<nav class="employee-links" style="padding-top:15px;">
    <a class="btn btn-default" stlye="margin:10px;" href="./">Back to Employee Section</a>
    <a class="btn btn-default" stlye="margin:10px;" asp-page="../Logout">Logout</a>
</nav>
<h1 style="text-align:center;">Sales Report Page</h1>
<div class="container">
    <form method="get">
        <div class="row">
            <div id="rangeDiv" class="col-sm-4 form-group">
                <h2>By Date</h2>
                <div class="form-group">
                    <label for="startDate" id="sDLbl">Starting Date</label>
                    <input type="text" id="startDate" name="startDate" class="dateSelection form-control" value="@Model.sD" />
                </div>
                <div class="form-group">
                    <label for="endDate" id="endDateLabel">Ending Date</label>
                    <input type="text" id="endDate" name="endDate" class="dateSelection form-control" value="@Model.eD" style="" />
                </div>
                <p>Only select starting date for single day results.</p>
            </div>

            <div id="timeGenerator" class="form-group col-sm-4">
                <h2>By Time</h2>
                <div>
                    <label for="startTime">Time</label>
                    <input type="text" name="startTime" class="timeSelection form-control" value="@Model.sT" />
                </div>
                <div>
                    <label for="endTime">Ending Time</label>
                    <input type="text" name="endTime" class="timeSelection form-control" value="@Model.eT" />
                </div>
            </div>

            <div id="storeGenerator" class="form-group col-sm-4">
                <h2>By Store</h2>
                <label for="storeSelect">Select Store</label>
                <select name="storeSelect" id="storeSelection" class="form-control">
                    <option value="none"></option>
                    @for (int i = 0; i < Model.SInt; i++)
                    {
                        @if (Model.StoreResults[i][0] == Model.sS.ToString())
                        {
                            <option value="@Model.StoreResults[i][0]" selected>@Model.StoreResults[i][1]</option>
                        }
                        else
                        {
                            <option value="@Model.StoreResults[i][0]">@Model.StoreResults[i][1]</option>

                        }
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div id="employeeGenerator" class="form-group col-sm-4">
                <h2>By Employee</h2>
                <div>
                    <label for="employeeSearch">Employee</label>
                    <select name="employeeSearch" id="employeeSearch" class="form-control">
                        <option value="none"></option>
                        @for(int i = 0; i < Model.EInt; i ++)
                        {
                            <option value="@Model.EmployeeResults[i][0]">@Model.EmployeeResults[i][1], @Model.EmployeeResults[i][2]</option>

                        }
                    </select>

                </div>
                <div>
                    <label for="employeeID">Employee ID</label>
                    <input type="number" name="employeeID" class="form-control" id="eID" />
                    <label for="employeeTitle">Title</label>

                    <select name="employeeTitle" class="form-control">
                        <option value="none"></option>
                        @for (int i = 0; i < Model.TInt; i++)
                        {
                            <option value="@Model.TitleResults[i][0]">@Model.TitleResults[i][1]</option>
                        }

                    </select>
                </div>
            </div>
            <!--
            <div id="customerGenerator">
                <h2>By Customer</h2>
                <div>
                    <label for="customerID">Customer ID</label>
                    <input type="text" name="customerID" id="cID" />
                </div>
                <div>
                    <label for="customerFName">First Name</label>
                    <input type="text" name="customerFName" id="cFirstName" />

                    <label for="customerLName">Last Name</label>
                    <input type="text" name="customerLName" id="cLastName" />
                </div>
                <div>
                    <label for="customerAddress">Address</label>
                    <input type="text" name="customerAddress" id="cID" />
                    <label for="customerZip">Zip Code</label>
                    <input type="text" name="customerZip" id="cID" />
                </div>
                <div>
                    <label for="customerPhone">Phone Number</label>
                    <input type="text" name="customerPhone" id="cID" />
                    <label for="customerEmail">Email</label>
                    <input type="text" name="customerEmail" id="cID" />
                </div>
            </div>
                -->
            <div id="productGenerator" class="form-group col-sm-4">
                <h2>By Product</h2>
                <label for="productID">Product ID</label>
                <input type="number" name="productID" id="productID" class="form-control" />
                <label for="productName">Product Name</label>
                <select name="productName" id="productName" class="form-control">
                    <option value="none"></option>
                    @for (int i = 0; i < Model.ProductResults.Count(); i++)
                    {
                        <option value="@Model.ProductResults[i][0]">@Model.ProductResults[i][1]</option>

                    }
                </select>
                <!--
                <label for="productName">Name</label>
                <input type="text" name="productName" />
                    -->
            </div>
        </div>
        <div class="row">
            <div class="form-group col" style="text-align:center;">
                <input type="submit" class="btn btn-primary" value="Generate Report" />
            </div>
        </div>
    </form>
</div>
<div id="resultsContainer">
    @if (Model.BInt >= 4)
    {
        <canvas id="myChart" width="400" height="150"></canvas>
    }
    @if (Model.BInt == 0)
    {
        <span class="noResults">No results were found</span>
    }
    else if (Model.BInt > 0)
    {
        // Do an hourly result for the graph if less than 4?
        <div style="padding-bottom:15px; font-size:large;"><span id="avgLabel" style="text-align:right; font-weight:bolder; padding-right:15px;">Average Per Day:&nbsp;</span><span id="avgCell"></span></div>
        if (Model.pID == -1)
        {
            <div style="padding-bottom:15px; font-size:large;"><span id="tixSold" style="text-align:right; font-weight:bolder; padding-right:15px;">Tickets Sold:&nbsp;</span><span id="tixTotal">@Model.ticketsSold</span></div>
        }
        <table id="report" class="table table-hover">
            <thead>
                <tr>
                    @for (int i = 0; i < Model.AInt; i++)
                    {
                        <th>@Model.ViewColumns[i]</th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.BInt; i++)
                {
                    <tr>
                        <td>@DateTime.Parse(Model.ViewResults[i][0]).ToString("yyyy/MM/dd", System.Globalization.CultureInfo.GetCultureInfo("en-US"))</td>
                        <td>@Model.ViewResults[i][1]</td>

                    </tr>
                }

            </tbody>
        </table>

    }


</div>
<!--
<table id="sales" style="width:50%; border:1px solid black; padding:15px">

    <tr>
        <th>Date</th>
        <th>Total Revenue</th>
        <th># of Purchases</th>
        <th>Aggregate Store Info</th>
    </tr>

    @for (int i = 0; i < Model.PurchaseDateList.Count; i++)
    {
        <form method="post">
            <tr>
                <td>@Model.PurchaseDateList[i].Month/@Model.PurchaseDateList[i].Day/@Model.PurchaseDateList[i].Year</td>
                <td>$@decimal.Round(Model.PurchaseAmountList[i], 2, MidpointRounding.AwayFromZero)</td>
                <td>@Model.PurchaseQuantityList[i]</td>
                <td>
                    <select name="storeChoice">
                        <option value="Ticket Booths, @Model.PurchaseDateList[i]">Ticket Booths</option>
                        <option value="Restaurants, @Model.PurchaseDateList[i]">Restaurants</option>
                        <option value="Gift Shops, @Model.PurchaseDateList[i]">Gift Shops</option>
                    </select>
                    <input type="submit" value="Select" />

                </td>
            </tr>
        </form>
    }
</table>




@if(Model.secondTableChoice != ""){
    <table id="StoreInfo" style="width:50%; border:1px solid black; padding:15px">

        <tr>
            <th>@Model.secondTableStoreChoice</th>
            <th>#Purchases</th>
            <th>Total Revenue</th>
            <th>#Items</th>
            <th>$Average Purchase</th>
        </tr>
        <tr>
            <td>@Model.secondTableDateChoice</td>
            <td>@Model.StorePurchaseNum</td>
            <td>$@decimal.Round(Model.StoreRevenue, 2, MidpointRounding.AwayFromZero)</td>
            <td>@Model.StoreItems</td>
            <td>$@decimal.Round(Model.StoreAverage, 2, MidpointRounding.AwayFromZero)</td>
        </tr>
    </table>
}
-->
<p>@Model.secondTableChoice</p>
<p>@Model.secondTableStoreChoice</p>
<p>@Model.secondTableDateChoice</p>
<p>@Model.AMessage</p>
<script>
    $(document).ready(function () {
        $("form").submit(function () {
            $("input").each(function (index, obj) {
                if ($(obj).val() == "") {
                    $(obj).remove();
                }
            });
            $("select").each(function (index, obj) {
                if ($(obj).val() == "none") {
                    $(obj).remove();
                }
            });
        });
    });
    $(".dateSelection").each(function () {
        $(this).datepicker({
            dateFormat: "yy/mm/dd"
        });
    });

    var productId = document.getElementById("productID");
    var productName = document.getElementById("productName");
    productName.addEventListener("change", function () {
        if (productName.value == "none")
            productId.value = "";
        else
            productId.value = productName.value;
    });

    var reportTable = document.getElementById("report");
    var tableData = [];
    var tableDates = [];
    var avg = 0;
    var bInt = @Model.BInt;
    console.log(bInt);
    if (bInt >= 4) {
        for (i = 0; i < bInt; i++) {
            console.log(reportTable.children[1].children)
            var date = reportTable.children[1].children[i].children[0].innerHTML;
            console.log("date: " + date);
            var value = parseInt(reportTable.children[1].children[i].children[1].innerHTML);

            avg += value;
            console.log(avg);
            tableData.push(value);
            date = new Date(date.replace(/-/g, "/"));
            date = new Date(date.toDateString());
            console.log(date);
            tableDates.push(date);
        }
        avg = avg / bInt;
        console.log("avg: " + avg);
        document.getElementById("avgCell").innerHTML = "$" + avg.toFixed(2);

        console.log(tableDates);
        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: tableDates,
                datasets: [{
                    label: 'Sales',
                    data: tableData,
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        time: {
                            //unit: 'day',
                            displayFormats: {
                                month: 'MMM YYYY',
                                hour: 'MMM D'
                            }

                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Date"
                        }

                    }],
                    yAxes: [{
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + value;
                            }
                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Sales"
                        }
                    }]
                }
            }
        });
    }
    $(document).ready(function () {
        $('#report').DataTable({
            "order": []
        });
    });
    
    $(document).ready(function () {
        $('#employeeSearch').select2();
    });

    $('#employeeSearch').on('select2:select', function (e) {
        console.log("triggered")
        // Do something
        var data = e.params.data;
        console.log(data);
        document.getElementById("eID").value = data.id;
    });
</script>